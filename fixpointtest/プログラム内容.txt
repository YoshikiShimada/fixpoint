設問1　question1.pyについて
1から23行目まででテストデータをdate,IPv4,pingに分割してリストに順に入れています。
ここまでは全ての設問のプログラムで同一なので以後説明を省きます。
def question1()内
36から61行目まででさらにサーバごとにデータを分割してリストに入れています。
63行目から78行目まででサーバが最初にタイムアウトした時間、サーバがタイムアウトし続けているか、タイムアウトから回復しているかをif文で判断し回復していたら故障サーバアドレスと故障期間を表示します。
以降各サーバについて同じ処理を行っています。80から93行目はサーバ2、95から108行目はサーバ3、110から123行目はサーバ4についての処理が書かれています。

設問2　question2.pyについて
def question2()内
39から64行目まではquestion1()と同様にサーバごとにデータを分割しています。
66から84行目まででサーバ1("10.20.30.1/16")についてif文を用いて最初にタイムアウトした場合、タイムアウトし続けている場合、
タイムアウトが入力値より少なかった場合、タイムアウトが入力値より多かった場合、
に分類してタイムアウト回数が入力値より多かった場合そのサーバのアドレスと故障期間を表示、ファイルに書き込みするようになっています。
86から97行目では故障がなかった場合と故障し続けている場合をif文を用いて分類し表示、ファイルに書き込みます。
99から130行目まではサーバ2("10.20.30.2/16")についてサーバ1と同様の処理を行っています。
132から163行目まではサーバ3("192.168.1.1/24")についてサーバ1と同様の処理を行っています。
166から197行目まではサーバ4("192.168.1.2/24")についてサーバ1と同様の処理を行っています。

設問3　question3.pyについて
def question3()内
42から67行目まではquestion1()と同様にサーバごとにデータを分割しています。
70行目でサーバ1("10.20.30.1/16")のパラメータリストの長さが入力値以上の長さか確認しています。
71から73行目でサーバ1の応答時間の合計を求めて75行目で平均時間を求めています。
76から86行目で平均時間が入力値より長かった場合過負荷サーバアドレスと期間を表示、ファイルに書き込み、
短かった場合過負荷なしと判断しファイルに書き込みます。
87から89行目ではサーバのパラメータリストの長さが入力値以下だった場合の処理を行っています。
91から109行目ではサーバ2("10.20.30.2/16")についてサーバ1と同様の処理を行っています。
111から130行目ではサーバ3("192.168.1.1/24")についてサーバ1と同様の処理を行っています。
132から150行目ではサーバ4("192.168.1.2/24")についてサーバ1と同様の処理を行っています。

設問4　question4.pyについて
def question4()内
32から55行目まではサブネットごとにデータを分割しています。
58行目ではサブネット1(10.20)リストのデータ数が入力値以上であることを確認しています。
59から75行目まででpingの値がタイムアウト"-"である数を数え、連続で入力値以上かつpingの値が再び返ってきた場合、
故障サブネットの故障開始時と終了時、故障時間を表示、ファイルに書き込みます。
78から87行目ではpingが入力値以上タイムアウトしていてかつ、タイムアウトから回復していない場合
故障サブネットの故障開始時と故障中、故障時間を表示、ファイルに書き込みます。さらにpingのタイムアウトが入力値以下だった場合、
故障無しとして表示、ファイルに書き込みます。これは故障から回復した場合も回復した時間と”故障無し”と表示、ファイルに書き込みます。
90から121行目ではサブネット2(192.168.1)についてサブネット1と同様の処理を行っています。

